version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "9999:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 10

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 3s
      timeout: 30s
      retries: 10

  redis:
    image: redis:alpine
    ports:
      - "6378:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5

  consumer1:
    build: .
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - CONTAINER_ROLE=consumer1
    env_file:
      - .env

  consumer2:
    build: .
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - CONTAINER_ROLE=consumer2
    env_file:
      - .env

  publisher:
    build: .
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
      consumer1:
        condition: service_started
      consumer2:
        condition: service_started
    env_file:
      - .env
    environment:
      - CONTAINER_ROLE=publisher